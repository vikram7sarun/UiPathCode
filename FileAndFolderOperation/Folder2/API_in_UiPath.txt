*****************************API in UiPath*****************************
Read Ranage - Pass the excel sheet
 for each 
  HTTP Request Activity - Pass the end point and get the output in a varaiable
  DeSerialize JSON      - Used to get Json Object from json String.
 Write Cell
    path
	sheet1 - "B" + CInt(intIndex + 2).ToString
	djson.SelectToken("name").ToString - to parse json value.
	
Pacakage - UiPath.WebApi.Activities	
	
-------------------------------------------------------------------
Orchjestrator API:

Swagger File:
https://cloud.uipath.com/fmrxnqhdbl/DefaultTenant/orchestrator_/swagger/index.html#/Stats 

1)Orchestrator HTTP Request - take endpoint from swagger and place it.
2)DeSerialize JSON      - Use to Get in proper JSON Format.
3)For Each to get each data - item in JObj("value")
                                 "Folder Name : "+item("DisplayName").ToString + Environment.NewLine + "Folder Id : "  +item("Id").ToString
-------------------------------------------------------------------
1.Authentication and Authorization:

Authentication - Happens Initially.
eg: Login to the application , password , pin code , Answer to secret /Persoanl Question

Authorization  - Giving access to the particuar resources or shoul we allow the user to do the operations.

AWS Services - s3,EC2,RDS,Lambda
------------------------------------------------------------------
Different Type of Authentication

1)Basic Authentication - 
       - UN & PSWD -> encode to base 64 -> use http header 
	       Authorization: Basic bG9sOnNlY3VyZQ==
2)Bearer Token
       - The bearer token allowing access to a certain resource or URL and most likely is a cryptic string, usually generated by the server in response to a login request.
		 The client must send this token in the Authorization header when making requests to protected resources:
          Authorization: Bearer <token>
3)Api key - Req -> server -> API key
        Authorization: Apikey 1234567890abcdef

4)0Auth - To give secure deligated Secure access to client
    0Auth 1.0 and 1.0a -
	0Auth 2.0 - 
       -Authorization code
       -Scope
       -RedirectionURL
       -AccessToken	   
	 ->  access token: sent like an API key, it allows the application to access a user’s data; optionally, access tokens can expire.
     ->  refresh token: optionally part of an OAuth flow, refresh tokens retrieve a new access token if they have expired. OAuth2 combines Authentication and Authorization to allow more sophisticated scope and validity control.
---------------------------------------------
Different Status Code:

200 OK, 201 Created, 202 Accepted:
Everything went awesome.

400 Bad Request:
Your request is invalid and/or not formed properly. You need to reformulate your request.

401 Not Authorized:
Either you need to provide authentication credentials, or the credentials provided aren't valid.

403 Forbidden:
We understand your request, but are refusing to fulfill it. An accompanying error message should explain why.

404 Not Found:
Either you're requesting an invalid URI or the resource in question doesn't exist (ex: no such user).

500 Internal Server Error:
We did something wrong. We'll be notified and we'll look into it.

502 Bad Gateway:
Returned if Intervals is down or being upgraded, or if the system is overloaded and API requests are being throttled.

503 Service Unavailable:
Usually as a result of suspension, we are refusing to process this request. You *may* try again later.

-----------------------------------------------------
Path Param  -   GET /employee/{id}
Query param -  GET /employee?start=1&size=10
----------------------------------------------------
-SOAP stands for Simple Object Access Protocol and REST stands for Representational State Transfer.
-Since SOAP is a protocol, it follows a strict standard to allow communication between the client and the server whereas REST is an architectural style that doesn’t follow any strict standard but follows six constraints defined by Roy Fielding in 2000. Those constraints are – Uniform Interface, Client-Server, Stateless, Cacheable, Layered System, Code on Demand.
-SOAP uses only XML for exchanging information in its message format whereas REST is not restricted to XML and its the choice of implementer which Media-Type to use like XML, JSON, Plain-text. Moreover, REST can use SOAP protocol but SOAP cannot use REST.
-On behalf of services interfaces to business logic, SOAP uses @WebService whereas REST instead of using interfaces uses URI like @Path.
-SOAP is difficult to implement and it requires more bandwidth whereas REST is easy to implement and requires less bandwidth such as smartphones.
-Benefits of SOAP over REST as SOAP has ACID compliance transaction. Some of the applications require transaction ability which is accepted by SOAP whereas REST lacks in it.
-On the basis of Security, SOAP has SSL( Secure Socket Layer) and WS-security whereas REST has SSL and HTTPS. In the case of Bank Account Password, Card Number, etc. SOAP is preferred over REST. The security issue is all about your application requirement, you have to build security on your own. It’s about what type of protocol you use.

----------------------------------------------------
Convert Json Array to DT:

Newtonsoft.JSon.JsonConvert.DeserializeObject(of Datatable)(DJArray.ToString)

----------------------------------------------------
Convert DT into Json:


----------------------------------------------------

































